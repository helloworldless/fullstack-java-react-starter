// Based on https://github.com/xword/java-npm-gradle-integration-example
plugins {
    id "base"
    id "com.moowork.node" version "1.3.1"
}

node {
    version = '12.16.1'
    npmVersion = '6.13.6'
    yarnVersion = '1.22.0'
}

yarn_build {
    // make sure the build task is executed only when appropriate files change
    inputs.files fileTree('public')
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'yarn.lock'

    outputs.dir 'build'
}

// package output of the build into JAR file
task bundleWebApp(type: Zip) {
    dependsOn yarn_build
    baseName 'ui'
    extension 'jar'
    destinationDir file("${projectDir}/build_webapp")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static'
    }
}

// declare a dedicated scope for publishing the packaged JAR
configurations {
    webAppResources
}

configurations.default.extendsFrom(configurations.webAppResources)

// expose the artifact created by the packaging task
artifacts {
    webAppResources(bundleWebApp.archivePath) {
        builtBy bundleWebApp
        type 'jar'
    }
}

assemble.dependsOn bundleWebApp

task test(type: YarnTask) {
    dependsOn assemble
    // force Jest test runner to execute tests once and finish the process instead of starting watch mode
    environment CI: 'true'
    args = ['test']

    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'yarn.lock'
}

check.dependsOn test

clean {
    delete bundleWebApp.archivePath
}

